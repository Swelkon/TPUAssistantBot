const {Scenes, Markup} = require('telegraf')
const constants = require("../../model/constants")
const DataBus = require("../../model/DataBus")
const defaultAct = require("../../DefaultAct")

// –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const PROFILE_MARKUP = Markup.keyboard([
    constants.BUTTON_TEXT_MAIN_MENU
]).resize(true)

// –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ü–µ–Ω—ã –ø—Ä–æ—Ñ–∏–ª—è
function profileSceneGenerate() {
    const profileScene = new Scenes.BaseScene(constants.SCENE_ID_PROFILE)

    // –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É
    profileScene.enter(async (ctx) => {
        // –ø–æ–ª—É—á–µ–Ω–∏–µ –ª–∏—á–Ω—ã—Ö –∏ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = DataBus.getUser({ctx: ctx})
        const studentInfo = DataBus.getStudentInfo({ctx: ctx})

        // —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏
        if (user) {
            let msg = "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
            msg += `üìç –ò–º—è: ${user.first_name}\n`
            msg += `üìç –§–∞–º–∏–ª–∏—è: ${user.last_name}\n`
            msg += `üìç –ü–æ—á—Ç–∞ –¢–ü–£: ${user.email}\n`
            if (studentInfo){
                msg += `üìç –ì—Ä—É–ø–ø–∞: ${studentInfo.gruppa}\n`
                msg += `üìç –ù–æ–º–µ—Ä –∑–∞—á–µ—Ç–Ω–æ–π –∫–Ω–∏–∂–∫–∏: ${studentInfo.gradebook_number}\n`
                msg += `üìç –®–∫–æ–ª–∞: ${studentInfo.department}\n`
                msg += `üìç –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è: ${studentInfo.direction_of_training}\n`
                msg += `üìç –§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è: ${studentInfo.form_of_education}\n`
                msg += `üìç –¢–∏–ø –æ–±—É—á–µ–Ω–∏—è: ${studentInfo.type_of_financing}\n`
                msg += `üìç –°—Ç–∞—Ç—É—Å: ${studentInfo.status}\n`
            }

            // –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è
            await ctx.reply( msg, PROFILE_MARKUP)
        } else {
            // –∏–Ω–∞—á–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–π—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            await ctx.reply("–ù–µ –≤–∏–∂—É –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å üêÄ")
            await ctx.reply("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–π—Ç–∏ —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É –¢–ü–£")
            await ctx.scene.enter(constants.SCENE_ID_START)
        }
    })

    // —Ñ—É–Ω–∫—Ü–∏—è —Å –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è –≤—Å–µ—Ö —Å—Ü–µ–Ω, –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Å–∞–º–∞ —Å—Ü–µ–Ω–∞ –∏ —Å—Ü–µ–Ω–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –Ω–∞–∑–∞–¥
    defaultAct(profileScene, constants.SCENE_ID_MAIN_MENU)
    return profileScene
}

module.exports = profileSceneGenerate